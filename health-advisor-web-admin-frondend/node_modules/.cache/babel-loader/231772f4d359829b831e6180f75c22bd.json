{"ast":null,"code":"var _jsxFileName = \"G:\\\\health-advisor-web-admin-frontend\\\\health-advisor-web-admin-frondend\\\\src\\\\components\\\\company\\\\SellerAdd.js\";\nimport React, { Fragment, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport Navbar from '../../layouts/Navbar';\nimport Container from '../../layouts/Container';\nimport Wrapper from '../../layouts/Wrapper';\nimport style from './SellerAdd.module.css';\nimport MultiSelectBox from '../../layouts/features/MultiSelectBox';\nimport SelectBox from '../../layouts/features/SelectBox';\nimport attach_icon from '../../assets/images/attach_icon.png';\nimport calender_icon from '../../assets/images/calendar_icon.png';\nimport location_icon from '../../assets/images/location_icon.png';\nimport medic_logo from '../../assets/images/medic_logo.png';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst SellerAdd_Company = props => {\n  const pageTitle = 'New / edit seller (Company)';\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    getValues,\n    control\n  } = useForm({\n    mode: 'onBlur'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const [checkboxSelected, setCheckboxSelected] = useState({\n    Active: false\n  });\n\n  const onClickCheckbox = name => {\n    setValue(name, !getValues(name), {\n      shouldValidate: true\n    });\n    setCheckboxSelected({ ...checkboxSelected,\n      [name]: getValues(name)\n    });\n  };\n\n  const onFileUpload = () => {\n    console.log(getValues('license_attachment'));\n  };\n\n  const CustomDatePickerInputForLicense = React.forwardRef(({\n    onClick,\n    onChange,\n    value\n  }, ref) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: style.date_picker_input,\n      onClick: onClick,\n      onChange: onChange,\n      value: value,\n      ref: ref,\n      placeholder: \"License expiry date:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: style.date_picker_input_icon,\n      src: calender_icon,\n      alt: \"\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    pageTitle: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: style.form_wrapper,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box_disabled,\n    name: \"company_code\",\n    placeholder: \"Company code:\",\n    disabled: true,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), errors.company_code && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Company code is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"company_name\",\n    placeholder: \"Company name:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), errors.company_name && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Company name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MultiSelectBox, {\n    items: [{\n      id: 1,\n      label: 'Select Business Line:',\n      value: ''\n    }, {\n      id: 2,\n      label: 'Pharmacy',\n      value: 'Pharmacy'\n    }, {\n      id: 3,\n      label: 'Hospital',\n      value: 'Hospital'\n    }, {\n      id: 4,\n      label: 'Medical Center',\n      value: 'Medical Center'\n    }],\n    name: \"business_line\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), errors.business_line && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Business Line is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"user_id_or_email\",\n    placeholder: \"User ID/email:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), errors.user_id_or_email && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"User ID/email is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"Authorised_contact_person\",\n    placeholder: \"Authorised contact person:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), errors.Authorised_contact_person && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Authorised contact person name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"Telephone_no\",\n    placeholder: \"Telephone no:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), errors.Telephone_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Telephone no is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"mobile_no\",\n    placeholder: \"Mobile no:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), errors.mobile_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Mobile no is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_horizontal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: style.checkbox_container,\n    htmlFor: \"Active\",\n    tabIndex: \"0\",\n    onClick: () => onClickCheckbox('Active'),\n    onKeyDown: e => e.keyCode === 32 ? onClickCheckbox('Active') : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"VAT excluded\", /*#__PURE__*/React.createElement(\"input\", {\n    name: \"Active\",\n    type: \"checkbox\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: style.checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  })), errors.vat_excluded && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"VAT Excluded is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_small,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectBox, {\n    items: [{\n      id: 1,\n      label: 'VAT percentage:',\n      value: ''\n    }, {\n      id: 2,\n      label: '100',\n      value: 1\n    }, {\n      id: 3,\n      label: '50',\n      value: 2\n    }, {\n      id: 4,\n      label: '20',\n      value: 3\n    }],\n    name: \"VAT_percentage\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }), errors.VAT_percentage && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"VAT percentage is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectBox, {\n    items: [{\n      id: 1,\n      label: 'Commission %:',\n      value: ''\n    }, {\n      id: 2,\n      label: '10%',\n      value: 1\n    }, {\n      id: 3,\n      label: '20%',\n      value: 2\n    }, {\n      id: 4,\n      label: '30%',\n      value: 3\n    }],\n    name: \"commission\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), errors.commission && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"commission% is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectBox, {\n    items: [{\n      id: 1,\n      label: 'Commission % to salesman:',\n      value: ''\n    }, {\n      id: 2,\n      label: '10%',\n      value: 1\n    }, {\n      id: 3,\n      label: '20%',\n      value: 2\n    }, {\n      id: 4,\n      label: '30%',\n      value: 3\n    }],\n    name: \"commission_to_salesman\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), errors.commission_to_salesman && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, \"commission % to salesman is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"license_no\",\n    placeholder: \"License no:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), errors.license_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, \"License no is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_horizontal_halved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_halved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"license_exp_date\",\n    defaultValue: \"\",\n    rules: {\n      required: true\n    },\n    render: ({\n      onChange,\n      onBlur,\n      value\n    }) => /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onChange,\n      onBlur: onBlur,\n      selected: value,\n      minDate: new Date() // showYearDropdown\n      // scrollableYearDropdown\n      // yearDropdownItemNumber={30}\n      ,\n      onChangeRaw: e => e.preventDefault(),\n      customInput: /*#__PURE__*/React.createElement(CustomDatePickerInputForLicense, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }), errors.license_exp_date && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, \"License expiry date is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_halved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.file_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: `${style.input_box_half_right} ${style.file_input_label}`,\n    htmlFor: \"attachment\",\n    onClick: () => onFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, \"Attachment\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: attach_icon,\n    className: style.file_input_icon,\n    alt: \"\",\n    htmlFor: \"attachment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: 'none'\n    },\n    name: \"attachment\",\n    id: \"attachment\",\n    placeholder: \"Attac\",\n    type: \"file\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  })), errors.license_attachment && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, \"Attachment is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectBox, {\n    items: [{\n      id: 1,\n      label: 'Bank transaction at corporate level:',\n      value: ''\n    }, {\n      id: 2,\n      label: '10%',\n      value: 1\n    }, {\n      id: 3,\n      label: '20%',\n      value: 2\n    }, {\n      id: 4,\n      label: '30%',\n      value: 3\n    }],\n    name: \"Bank_transaction_at_corporate_level\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }), errors.Bank_transaction_at_corporate_level && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, \"Bank transaction at corporate level is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"IBAN_no\",\n    placeholder: \"IBAN NO:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }), errors.IBAN_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"IBAN NO is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"bank_name\",\n    placeholder: \"Bank name:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }), errors.bank_name && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, \"Bank name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"beneficiary_name\",\n    placeholder: \"Beneficiary name:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }), errors.beneficiary_name && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, \"Beneficiary name is required\")))))));\n};\n\nexport default SellerAdd_Company;","map":{"version":3,"sources":["G:/health-advisor-web-admin-frontend/health-advisor-web-admin-frondend/src/components/company/SellerAdd.js"],"names":["React","Fragment","useState","useForm","Controller","Navbar","Container","Wrapper","style","MultiSelectBox","SelectBox","attach_icon","calender_icon","location_icon","medic_logo","DatePicker","SellerAdd_Company","props","pageTitle","register","handleSubmit","errors","setValue","getValues","control","mode","onSubmit","data","console","log","checkboxSelected","setCheckboxSelected","Active","onClickCheckbox","name","shouldValidate","onFileUpload","CustomDatePickerInputForLicense","forwardRef","onClick","onChange","value","ref","date_picker_input","date_picker_input_icon","container","form_wrapper","form_group","input_box_disabled","required","company_code","error","input_box","company_name","id","label","business_line","user_id_or_email","Authorised_contact_person","Telephone_no","mobile_no","form_group_horizontal","form_group_checkbox","checkbox_container","e","keyCode","checkbox","vat_excluded","form_group_small","VAT_percentage","commission","commission_to_salesman","license_no","form_group_horizontal_halved","form_group_halved","onBlur","Date","preventDefault","license_exp_date","file_input","input_box_half_right","file_input_label","file_input_icon","display","license_attachment","Bank_transaction_at_corporate_level","IBAN_no","bank_name","beneficiary_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Navbar from '../../layouts/Navbar';\r\nimport Container from '../../layouts/Container';\r\nimport Wrapper from '../../layouts/Wrapper';\r\n\r\nimport style from './SellerAdd.module.css';\r\n\r\nimport MultiSelectBox from '../../layouts/features/MultiSelectBox';\r\nimport SelectBox from '../../layouts/features/SelectBox';\r\n\r\nimport attach_icon from '../../assets/images/attach_icon.png';\r\nimport calender_icon from '../../assets/images/calendar_icon.png';\r\nimport location_icon from '../../assets/images/location_icon.png';\r\nimport medic_logo from '../../assets/images/medic_logo.png';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst SellerAdd_Company = (props) => {\r\n    const pageTitle = 'New / edit seller (Company)';\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        errors,\r\n        setValue,\r\n        getValues,\r\n        control,\r\n      } = useForm({\r\n        mode: 'onBlur',\r\n      });\r\n    \r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n      };\r\n      const [checkboxSelected, setCheckboxSelected] = useState({\r\n        Active: false,\r\n      });\r\n      const onClickCheckbox = (name) => {\r\n        setValue(name, !getValues(name), {\r\n          shouldValidate: true,\r\n        });\r\n        setCheckboxSelected({ ...checkboxSelected, [name]: getValues(name) });\r\n      };\r\n      const onFileUpload = () => {\r\n        console.log(getValues('license_attachment'));\r\n      };\r\n      const CustomDatePickerInputForLicense = React.forwardRef(\r\n        ({ onClick, onChange, value }, ref) => {\r\n          return (\r\n            <Fragment>\r\n              <input\r\n                className={style.date_picker_input}\r\n                onClick={onClick}\r\n                onChange={onChange}\r\n                value={value}\r\n                ref={ref}\r\n                placeholder='License expiry date:'\r\n              />\r\n    \r\n              <img\r\n                className={style.date_picker_input_icon}\r\n                src={calender_icon}\r\n                alt=''\r\n                onClick={onClick}\r\n              />\r\n            </Fragment>\r\n          );\r\n        }\r\n      );\r\n    return(\r\n    <Fragment>\r\n         <Navbar pageTitle={pageTitle} />\r\n         <Container>\r\n             <Wrapper>\r\n             <div className={style.container}>\r\n             <form className={style.form_wrapper} onSubmit={handleSubmit(onSubmit)}>\r\n                      {/*\r\n           */}\r\n          <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box_disabled}\r\n              name='company_code'\r\n              placeholder='Company code:'\r\n              disabled={true}\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.company_code && (\r\n              <span className={style.error}>Company code is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='company_name'\r\n              placeholder='Company name:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.company_name && (\r\n              <span className={style.error}>Company name is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <MultiSelectBox\r\n              items={[\r\n                { id: 1, label: 'Select Business Line:', value: '' },\r\n                { id: 2, label: 'Pharmacy', value: 'Pharmacy' },\r\n                { id: 3, label: 'Hospital', value: 'Hospital' },\r\n                { id: 4, label: 'Medical Center', value: 'Medical Center' },\r\n              ]}\r\n              name='business_line'\r\n              setValue={setValue}\r\n              inputRef={register({ required: true })}\r\n            />\r\n            {errors.business_line && (\r\n              <span className={style.error}>Business Line is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n             <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='user_id_or_email'\r\n              placeholder='User ID/email:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.user_id_or_email && (\r\n              <span className={style.error}>User ID/email is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='Authorised_contact_person'\r\n              placeholder='Authorised contact person:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.Authorised_contact_person && (\r\n              <span className={style.error}>Authorised contact person name is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='Telephone_no'\r\n              placeholder='Telephone no:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.Telephone_no && (\r\n              <span className={style.error}>Telephone no is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='mobile_no'\r\n              placeholder='Mobile no:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.mobile_no && (\r\n              <span className={style.error}>Mobile no is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group_horizontal}>\r\n                <div className={style.form_group_checkbox}>\r\n                  <label\r\n                    className={style.checkbox_container}\r\n                    htmlFor='Active'\r\n                    tabIndex='0'\r\n                    onClick={() => onClickCheckbox('Active')}\r\n                    onKeyDown={(e) =>\r\n                      e.keyCode === 32 ? onClickCheckbox('Active') : ''\r\n                    }\r\n                  >\r\n                    VAT excluded\r\n              <input name='Active' type='checkbox' ref={register} />\r\n                    <span className={style.checkbox}></span>\r\n                  </label>\r\n\r\n                  {errors.vat_excluded && (\r\n                    <span className={style.error}>VAT Excluded is required</span>\r\n                  )}\r\n                </div>\r\n                <div className={style.form_group_small}>\r\n                  <SelectBox\r\n                    items={[\r\n                      { id: 1, label: 'VAT percentage:', value: '' },\r\n                      { id: 2, label: '100', value: 1 },\r\n                      { id: 3, label: '50', value: 2 },\r\n                      { id: 4, label: '20', value: 3 },\r\n                    ]}\r\n                    name='VAT_percentage'\r\n                    setValue={setValue}\r\n                    inputRef={register({ required: true })}\r\n                  />\r\n                  {errors.VAT_percentage && (\r\n                    <span className={style.error}>\r\n                      VAT percentage is required\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {/*\r\n         */}\r\n            <div className={style.form_group}>\r\n            <SelectBox\r\n              items={[\r\n                { id: 1, label: 'Commission %:', value: '' },\r\n                { id: 2, label: '10%', value: 1 },\r\n                { id: 3, label: '20%', value: 2 },\r\n                { id: 4, label: '30%', value: 3 },\r\n              ]}\r\n              name='commission'\r\n              setValue={setValue}\r\n              inputRef={register({ required: true })}\r\n            />\r\n            {errors.commission && (\r\n              <span className={style.error}>commission% is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <SelectBox\r\n              items={[\r\n                { id: 1, label: 'Commission % to salesman:', value: '' },\r\n                { id: 2, label: '10%', value: 1 },\r\n                { id: 3, label: '20%', value: 2 },\r\n                { id: 4, label: '30%', value: 3 },\r\n              ]}\r\n              name='commission_to_salesman'\r\n              setValue={setValue}\r\n              inputRef={register({ required: true })}\r\n            />\r\n            {errors.commission_to_salesman && (\r\n              <span className={style.error}>commission % to salesman is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n             <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='license_no'\r\n              placeholder='License no:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.license_no && (\r\n              <span className={style.error}>License no is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group_horizontal_halved}>\r\n            <div className={style.form_group_halved}>\r\n              <Controller\r\n                control={control}\r\n                name='license_exp_date'\r\n                defaultValue=''\r\n                rules={{ required: true }}\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <DatePicker\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    selected={value}\r\n                    minDate={new Date()}\r\n                    // showYearDropdown\r\n                    // scrollableYearDropdown\r\n                    // yearDropdownItemNumber={30}\r\n                    onChangeRaw={(e) => e.preventDefault()}\r\n                    customInput={<CustomDatePickerInputForLicense/>}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.license_exp_date && (\r\n                <span className={style.error}>\r\n                  License expiry date is required\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className={style.form_group_halved}>\r\n              <div className={style.file_input}>\r\n                <label\r\n                  className={`${style.input_box_half_right} ${style.file_input_label}`}\r\n                  htmlFor='attachment'\r\n                  onClick={() => onFileUpload}\r\n                >\r\n                  Attachment\r\n                </label>\r\n                <img\r\n                  src={attach_icon}\r\n                  className={style.file_input_icon}\r\n                  alt=''\r\n                  htmlFor='attachment'\r\n                />\r\n                <input\r\n                  style={{ display: 'none' }}\r\n                  name='attachment'\r\n                  id='attachment'\r\n                  placeholder='Attac'\r\n                  type='file'\r\n                  ref={register({ required: true })}\r\n                />\r\n              </div>\r\n\r\n              {errors.license_attachment && (\r\n                <span className={style.error}>Attachment is required</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <SelectBox\r\n              items={[\r\n                { id: 1, label: 'Bank transaction at corporate level:', value: '' },\r\n                { id: 2, label: '10%', value: 1 },\r\n                { id: 3, label: '20%', value: 2 },\r\n                { id: 4, label: '30%', value: 3 },\r\n              ]}\r\n              name='Bank_transaction_at_corporate_level'\r\n              setValue={setValue}\r\n              inputRef={register({ required: true })}\r\n            />\r\n            {errors.Bank_transaction_at_corporate_level && (\r\n              <span className={style.error}>Bank transaction at corporate level is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           \r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='IBAN_no'\r\n              placeholder='IBAN NO:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.IBAN_no && (\r\n              <span className={style.error}>IBAN NO is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n             <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='bank_name'\r\n              placeholder='Bank name:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.bank_name && (\r\n              <span className={style.error}>Bank name is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n             <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='beneficiary_name'\r\n              placeholder='Beneficiary name:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.beneficiary_name && (\r\n              <span className={style.error}>Beneficiary name is required</span>\r\n            )}\r\n          </div>\r\n            {/*\r\n           */}\r\n           \r\n           </form>\r\n             </div> \r\n             </Wrapper>\r\n         </Container>\r\n    </Fragment>\r\n    )\r\n}\r\nexport default SellerAdd_Company;"]},"metadata":{},"sourceType":"module"}