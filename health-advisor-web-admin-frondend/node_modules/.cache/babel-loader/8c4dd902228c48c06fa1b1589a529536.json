{"ast":null,"code":"var _jsxFileName = \"G:\\\\health-advisor-web-admin-frontend\\\\health-advisor-web-admin-frondend\\\\src\\\\components\\\\company\\\\SellerAdd.js\";\nimport React, { Fragment, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport Navbar from '../../layouts/Navbar';\nimport Container from '../../layouts/Container';\nimport Wrapper from '../../layouts/Wrapper';\nimport style from './SellerAdd.module.css';\nimport MultiSelectBox from '../../layouts/features/MultiSelectBox';\nimport SelectBox from '../../layouts/features/SelectBox';\n\nconst SellerAdd_Company = props => {\n  const pageTitle = 'New / edit seller (Company)';\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    getValues,\n    control\n  } = useForm({\n    mode: 'onBlur'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const [checkboxSelected, setCheckboxSelected] = useState({\n    Active: false\n  });\n\n  const onClickCheckbox = name => {\n    setValue(name, !getValues(name), {\n      shouldValidate: true\n    });\n    setCheckboxSelected({ ...checkboxSelected,\n      [name]: getValues(name)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    pageTitle: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: style.form_wrapper,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box_disabled,\n    name: \"company_code\",\n    placeholder: \"Company code:\",\n    disabled: true,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), errors.company_code && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Company code is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"company_name\",\n    placeholder: \"Company name:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), errors.company_name && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Company name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MultiSelectBox, {\n    items: [{\n      id: 1,\n      label: 'Select Business Line:',\n      value: ''\n    }, {\n      id: 2,\n      label: 'Pharmacy',\n      value: 'Pharmacy'\n    }, {\n      id: 3,\n      label: 'Hospital',\n      value: 'Hospital'\n    }, {\n      id: 4,\n      label: 'Medical Center',\n      value: 'Medical Center'\n    }],\n    name: \"business_line\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), errors.business_line && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Business Line is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"user_id_or_email\",\n    placeholder: \"User ID/email:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), errors.user_id_or_email && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"User ID/email is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"Authorised_contact_person\",\n    placeholder: \"Authorised contact person:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), errors.Authorised_contact_person && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Authorised contact person name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"Telephone_no\",\n    placeholder: \"Telephone no:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), errors.Telephone_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Telephone no is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: style.input_box,\n    name: \"mobile_no\",\n    placeholder: \"Mobile no:\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), errors.mobile_no && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Mobile no is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_horizontal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: style.checkbox_container,\n    htmlFor: \"Active\",\n    tabIndex: \"0\",\n    onClick: () => onClickCheckbox('Active'),\n    onKeyDown: e => e.keyCode === 32 ? onClickCheckbox('Active') : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, \"VAT excluded\", /*#__PURE__*/React.createElement(\"input\", {\n    name: \"Active\",\n    type: \"checkbox\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: style.checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), errors.vat_excluded && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"VAT Excluded is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.form_group_small,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectBox, {\n    items: [{\n      id: 1,\n      label: 'VAT percentage:',\n      value: ''\n    }, {\n      id: 2,\n      label: '100',\n      value: 1\n    }, {\n      id: 3,\n      label: '50',\n      value: 2\n    }, {\n      id: 4,\n      label: '20',\n      value: 3\n    }],\n    name: \"VAT_percentage\",\n    setValue: setValue,\n    inputRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }), errors.VAT_percentage && /*#__PURE__*/React.createElement(\"span\", {\n    className: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"VAT percentage is required\"))))))));\n};\n\nexport default SellerAdd_Company;","map":{"version":3,"sources":["G:/health-advisor-web-admin-frontend/health-advisor-web-admin-frondend/src/components/company/SellerAdd.js"],"names":["React","Fragment","useState","useForm","Controller","Navbar","Container","Wrapper","style","MultiSelectBox","SelectBox","SellerAdd_Company","props","pageTitle","register","handleSubmit","errors","setValue","getValues","control","mode","onSubmit","data","console","log","checkboxSelected","setCheckboxSelected","Active","onClickCheckbox","name","shouldValidate","container","form_wrapper","form_group","input_box_disabled","required","company_code","error","input_box","company_name","id","label","value","business_line","user_id_or_email","Authorised_contact_person","Telephone_no","mobile_no","form_group_horizontal","form_group_checkbox","checkbox_container","e","keyCode","checkbox","vat_excluded","form_group_small","VAT_percentage"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Navbar from '../../layouts/Navbar';\r\nimport Container from '../../layouts/Container';\r\nimport Wrapper from '../../layouts/Wrapper';\r\n\r\nimport style from './SellerAdd.module.css';\r\n\r\nimport MultiSelectBox from '../../layouts/features/MultiSelectBox';\r\nimport SelectBox from '../../layouts/features/SelectBox';\r\n\r\nconst SellerAdd_Company = (props) => {\r\n    const pageTitle = 'New / edit seller (Company)';\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        errors,\r\n        setValue,\r\n        getValues,\r\n        control,\r\n      } = useForm({\r\n        mode: 'onBlur',\r\n      });\r\n    \r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n      };\r\n      const [checkboxSelected, setCheckboxSelected] = useState({\r\n        Active: false,\r\n      });\r\n      const onClickCheckbox = (name) => {\r\n        setValue(name, !getValues(name), {\r\n          shouldValidate: true,\r\n        });\r\n        setCheckboxSelected({ ...checkboxSelected, [name]: getValues(name) });\r\n      };\r\n    return(\r\n    <Fragment>\r\n         <Navbar pageTitle={pageTitle} />\r\n         <Container>\r\n             <Wrapper>\r\n             <div className={style.container}>\r\n             <form className={style.form_wrapper} onSubmit={handleSubmit(onSubmit)}>\r\n                      {/*\r\n           */}\r\n          <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box_disabled}\r\n              name='company_code'\r\n              placeholder='Company code:'\r\n              disabled={true}\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.company_code && (\r\n              <span className={style.error}>Company code is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='company_name'\r\n              placeholder='Company name:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.company_name && (\r\n              <span className={style.error}>Company name is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group}>\r\n            <MultiSelectBox\r\n              items={[\r\n                { id: 1, label: 'Select Business Line:', value: '' },\r\n                { id: 2, label: 'Pharmacy', value: 'Pharmacy' },\r\n                { id: 3, label: 'Hospital', value: 'Hospital' },\r\n                { id: 4, label: 'Medical Center', value: 'Medical Center' },\r\n              ]}\r\n              name='business_line'\r\n              setValue={setValue}\r\n              inputRef={register({ required: true })}\r\n            />\r\n            {errors.business_line && (\r\n              <span className={style.error}>Business Line is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n             <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='user_id_or_email'\r\n              placeholder='User ID/email:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.user_id_or_email && (\r\n              <span className={style.error}>User ID/email is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='Authorised_contact_person'\r\n              placeholder='Authorised contact person:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.Authorised_contact_person && (\r\n              <span className={style.error}>Authorised contact person name is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='Telephone_no'\r\n              placeholder='Telephone no:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.Telephone_no && (\r\n              <span className={style.error}>Telephone no is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n           <div className={style.form_group}>\r\n            <input\r\n              className={style.input_box}\r\n              name='mobile_no'\r\n              placeholder='Mobile no:'\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            {errors.mobile_no && (\r\n              <span className={style.error}>Mobile no is required</span>\r\n            )}\r\n          </div>\r\n          {/*\r\n           */}\r\n            <div className={style.form_group_horizontal}>\r\n                <div className={style.form_group_checkbox}>\r\n                  <label\r\n                    className={style.checkbox_container}\r\n                    htmlFor='Active'\r\n                    tabIndex='0'\r\n                    onClick={() => onClickCheckbox('Active')}\r\n                    onKeyDown={(e) =>\r\n                      e.keyCode === 32 ? onClickCheckbox('Active') : ''\r\n                    }\r\n                  >\r\n                    VAT excluded\r\n              <input name='Active' type='checkbox' ref={register} />\r\n                    <span className={style.checkbox}></span>\r\n                  </label>\r\n\r\n                  {errors.vat_excluded && (\r\n                    <span className={style.error}>VAT Excluded is required</span>\r\n                  )}\r\n                </div>\r\n                <div className={style.form_group_small}>\r\n                  <SelectBox\r\n                    items={[\r\n                      { id: 1, label: 'VAT percentage:', value: '' },\r\n                      { id: 2, label: '100', value: 1 },\r\n                      { id: 3, label: '50', value: 2 },\r\n                      { id: 4, label: '20', value: 3 },\r\n                    ]}\r\n                    name='VAT_percentage'\r\n                    setValue={setValue}\r\n                    inputRef={register({ required: true })}\r\n                  />\r\n                  {errors.VAT_percentage && (\r\n                    <span className={style.error}>\r\n                      VAT percentage is required\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {/*\r\n         */}\r\n           \r\n           \r\n           </form>\r\n             </div> \r\n             </Wrapper>\r\n         </Container>\r\n    </Fragment>\r\n    )\r\n}\r\nexport default SellerAdd_Company;"]},"metadata":{},"sourceType":"module"}